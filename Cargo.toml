[workspace]
members = [
  "contracts/*",
  "packages/*",
  # "scripts",
]
# Enable the version 2 feature resolver, which avoids unifying features for targets that are not being built
#
# Critically this prevents dev-dependencies from enabling features even when not building a target that
# uses dev-dependencies, e.g. the library crate. This in turn ensures that we can catch invalid feature
# flag combinations that would otherwise only surface in dependent crates
#
# Reference - https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2
# See - https://github.com/apache/arrow-rs/pull/1822/files
resolver = "2"

[workspace.package]
version = "0.2.0"
authors = [
  "Maurits Bos <mb.brains@gmail.com>",
  "Josef Leventon <josef.leventon@gmail.com>",
]

edition = "2021"


exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# Keep as is until TendermintStake updates.
[workspace.dependencies]
# abstract-sdk = { version = "0.12.0", git = "https://github.com/Abstract-OS/contracts.git" }
# abstract-api = { version = "0.12.0", git = "https://github.com/Abstract-OS/contracts.git" }
# abstract-app = { version = "0.12.0", git = "https://github.com/Abstract-OS/contracts.git" }
# abstract-os = { version = "0.12.0", git = "https://github.com/Abstract-OS/contracts.git" }
abstract-boot = { version = "0.13.0", git = "https://github.com/Abstract-OS/contracts.git" }
# abstract-testing = { version = "0.12.0", git = "https://github.com/Abstract-OS/contracts.git" }

# dex = { git = "https://github.com/Abstract-OS/apis.git" }
# cw-staking = { git = "https://github.com/Abstract-OS/apis.git" }
# # cw-staking = { path = "../../abstract/Apis/contracts/cw-staking" }

# forty-two = { version = "0.3.11", path = "packages/forty-two" }
# forty-two-boot = { version = "0.3.11", path = "packages/forty-two-boot" }

pegasus = { path = "packages/pegasus" }
cosmwasm-std = { version = "1.1" }
cosmwasm-schema = { version = "1.1" }
cw-asset = { version = "3.0" }
schemars = "0.8"
serde = { version = "1.0", default-features = false, features = ["derive"] }
thiserror = { version = "1.0" }
cw-storage-plus = "0.13.4"
cw-controllers = "1.0.1"
cw-paginate = { git = "https://github.com/DA0-DA0/dao-contracts.git", tag = "v1.0.0" }
cosmwasm-storage = { version = "1.1" }
cw-utils = "1.0.1"
cw721 = "0.13.4"
cw721-base = { version = "0.13.4", features = ["library"] }
sg721 = { version = "0.12.0", features = ["library"] }
sg-std = "0.12.1"
cw20 = "1.0.1"
cw2 = "1.0.1"
cw20-base = "1.0.1"
anyhow = { version = "1.0.51" }
cw-multi-test = "0.16"
rstest = "0.16.0"
speculoos = "0.11.0"
sg1 = "0.14.0"
sg-controllers = "0.12.1"

# dev dependencies
tokio = { version = "1.4", features = ["full"] }
semver = { version = "1.0" }
dotenv = "0.15.0"
env_logger = "0.10.0"
log = "0.4.14"
clap = { version = "4.0.32", features = ["derive"] }
boot-core = { version = "0.8.0" }
boot-cw-plus = { version = "0.8.0" }
sg-multi-test = { version = "0.14.0" }

[profile.release]
rpath = false
lto = true
overflow-checks = true
opt-level = 3
debug = false
debug-assertions = false
panic = "abort"
codegen-units = 1
incremental = false
